Test case: if x1 + 42 * (y2 - 3) = true then "result" else x1
Keyword(if)
Identifier(x1)
ArithmeticOp(+)
Integer(42)
ArithmeticOp(*)
Parenthesis(()
Identifier(y2)
ArithmeticOp(-)
Integer(3)
Parenthesis())
ComparisonOp(=)
Boolean(true)
Keyword(then)
StringLiteral(result)
Keyword(else)
Identifier(x1)





Test case: pair(fst(x), snd(y)) && !false || true
Keyword(pair)
Parenthesis(()
Keyword(fst)
Parenthesis(()
Identifier(x)
Parenthesis())
Comma
Keyword(snd)
Parenthesis(()
Identifier(y)
Parenthesis())
Parenthesis())
BooleanOp(&&)
BooleanOp(!)
Boolean(false)
BooleanOp(||)
Boolean(true)





Test case: x' + y_2 - 10 >= 20
Identifier(x')
ArithmeticOp(+)
Identifier(y_2)
ArithmeticOp(-)
Integer(10)
ComparisonOp(>)
ComparisonOp(=)
Integer(20)





Test case: "Hello,world!"
StringLiteral(Hello,world!)





Test case: 1 + 1
Integer(1)
ArithmeticOp(+)
Integer(1)





Test case: 0
Integer(0)





Test case: if x1 + 49842 * (y2'__ - 3) = true then "result" else x1, let x2 = "hello" = "world"  && false 
Keyword(if)
Identifier(x1)
ArithmeticOp(+)
Integer(49842)
ArithmeticOp(*)
Parenthesis(()
Identifier(y2'__)
ArithmeticOp(-)
Integer(3)
Parenthesis())
ComparisonOp(=)
Boolean(true)
Keyword(then)
StringLiteral(result)
Keyword(else)
Identifier(x1)
Comma
Keyword(let)
Identifier(x2)
ComparisonOp(=)
StringLiteral(hello)
ComparisonOp(=)
StringLiteral(world)
BooleanOp(&&)
Boolean(false)





Test case: x1 + 42 * (y'2'_ - 3 ) = (true && false) || pair
Identifier(x1)
ArithmeticOp(+)
Integer(42)
ArithmeticOp(*)
Parenthesis(()
Identifier(y'2'_)
ArithmeticOp(-)
Integer(3)
Parenthesis())
ComparisonOp(=)
Parenthesis(()
Boolean(true)
BooleanOp(&&)
Boolean(false)
Parenthesis())
BooleanOp(||)
Keyword(pair)





Test case: "He says ""Hello"" to Him" + 123
StringLiteral(He says )
StringLiteral(Hello)
StringLiteral( to Him)
ArithmeticOp(+)
Integer(123)





Test case: let x = 123
Keyword(let)
Identifier(x)
ComparisonOp(=)
Integer(123)





Test case: 0123
